{
  "name": "docker",
  "type": "provider",
  "version": "v1.0.1-1-g79c198a",
  "provider": {
    "ca_material": {
      "Type": "String",
      "Optional": true,
      "Description": "PEM-encoded content of Docker host CA certificate",
      "Default": {
        "Type": "string"
      }
    },
    "cert_material": {
      "Type": "String",
      "Optional": true,
      "Description": "PEM-encoded content of Docker client certificate",
      "Default": {
        "Type": "string"
      }
    },
    "cert_path": {
      "Type": "String",
      "Optional": true,
      "Description": "Path to directory with Docker TLS config",
      "Default": {
        "Type": "string"
      }
    },
    "host": {
      "Type": "String",
      "Required": true,
      "Description": "The Docker daemon address",
      "Default": {
        "Type": "string",
        "Value": "unix:///var/run/docker.sock"
      }
    },
    "key_material": {
      "Type": "String",
      "Optional": true,
      "Description": "PEM-encoded content of Docker client private key",
      "Default": {
        "Type": "string"
      }
    },
    "registry_auth": {
      "Type": "Set",
      "Optional": true,
      "Elem": {
        "Type": "SchemaInfo",
        "Info": {
          "address": {
            "Type": "String",
            "Required": true,
            "Description": "Address of the registry"
          },
          "config_file": {
            "Type": "String",
            "Optional": true,
            "Description": "Path to docker json file for registry auth",
            "ConflictsWith": [
              "registry_auth.username",
              "registry_auth.password"
            ],
            "Default": {
              "Type": "string",
              "Value": "~/.docker/config.json"
            }
          },
          "password": {
            "Type": "String",
            "Optional": true,
            "Description": "Password for the registry",
            "ConflictsWith": [
              "registry_auth.config_file"
            ],
            "Default": {
              "Type": "string"
            }
          },
          "username": {
            "Type": "String",
            "Optional": true,
            "Description": "Username for the registry",
            "ConflictsWith": [
              "registry_auth.config_file"
            ],
            "Default": {
              "Type": "string"
            }
          }
        }
      }
    }
  },
  "resources": {
    "docker_config": {
      "data": {
        "Type": "String",
        "Required": true,
        "Description": "Base64-url-safe-encoded config data"
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "User-defined name of the config"
      }
    },
    "docker_container": {
      "bridge": {
        "Type": "String",
        "Computed": true
      },
      "capabilities": {
        "Type": "Set",
        "Optional": true,
        "MaxItems": 1,
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "add": {
              "Type": "Set",
              "Optional": true,
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "drop": {
              "Type": "Set",
              "Optional": true,
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            }
          }
        }
      },
      "command": {
        "Type": "List",
        "Optional": true,
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "cpu_shares": {
        "Type": "Int",
        "Optional": true
      },
      "destroy_grace_seconds": {
        "Type": "Int",
        "Optional": true
      },
      "devices": {
        "Type": "Set",
        "Optional": true,
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "container_path": {
              "Type": "String",
              "Optional": true
            },
            "host_path": {
              "Type": "String",
              "Required": true
            },
            "permissions": {
              "Type": "String",
              "Optional": true
            }
          }
        }
      },
      "dns": {
        "Type": "Set",
        "Optional": true,
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "dns_opts": {
        "Type": "Set",
        "Optional": true,
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "dns_search": {
        "Type": "Set",
        "Optional": true,
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "domainname": {
        "Type": "String",
        "Optional": true
      },
      "entrypoint": {
        "Type": "List",
        "Optional": true,
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "env": {
        "Type": "Set",
        "Optional": true,
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "gateway": {
        "Type": "String",
        "Computed": true
      },
      "host": {
        "Type": "Set",
        "Optional": true,
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "host": {
              "Type": "String",
              "Required": true
            },
            "ip": {
              "Type": "String",
              "Required": true
            }
          }
        }
      },
      "hostname": {
        "Type": "String",
        "Optional": true
      },
      "image": {
        "Type": "String",
        "Required": true
      },
      "ip_address": {
        "Type": "String",
        "Computed": true
      },
      "ip_prefix_length": {
        "Type": "Int",
        "Computed": true
      },
      "labels": {
        "Type": "Map",
        "Optional": true
      },
      "links": {
        "Type": "Set",
        "Optional": true,
        "Deprecated": "The --link flag is a legacy feature of Docker. It may eventually be removed.",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "log_driver": {
        "Type": "String",
        "Optional": true
      },
      "log_opts": {
        "Type": "Map",
        "Optional": true
      },
      "max_retry_count": {
        "Type": "Int",
        "Optional": true
      },
      "memory": {
        "Type": "Int",
        "Optional": true
      },
      "memory_swap": {
        "Type": "Int",
        "Optional": true
      },
      "must_run": {
        "Type": "Bool",
        "Optional": true
      },
      "name": {
        "Type": "String",
        "Required": true
      },
      "network_alias": {
        "Type": "Set",
        "Optional": true,
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "network_mode": {
        "Type": "String",
        "Optional": true
      },
      "networks": {
        "Type": "Set",
        "Optional": true,
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "ports": {
        "Type": "Set",
        "Optional": true,
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "external": {
              "Type": "Int",
              "Optional": true
            },
            "internal": {
              "Type": "Int",
              "Required": true
            },
            "ip": {
              "Type": "String",
              "Optional": true
            },
            "protocol": {
              "Type": "String",
              "Optional": true
            }
          }
        }
      },
      "privileged": {
        "Type": "Bool",
        "Optional": true
      },
      "publish_all_ports": {
        "Type": "Bool",
        "Optional": true
      },
      "restart": {
        "Type": "String",
        "Optional": true
      },
      "ulimit": {
        "Type": "Set",
        "Optional": true,
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "hard": {
              "Type": "Int",
              "Required": true
            },
            "name": {
              "Type": "String",
              "Required": true
            },
            "soft": {
              "Type": "Int",
              "Required": true
            }
          }
        }
      },
      "upload": {
        "Type": "Set",
        "Optional": true,
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "content": {
              "Type": "String",
              "Required": true
            },
            "executable": {
              "Type": "Bool",
              "Optional": true
            },
            "file": {
              "Type": "String",
              "Required": true
            }
          }
        }
      },
      "user": {
        "Type": "String",
        "Optional": true,
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "volumes": {
        "Type": "Set",
        "Optional": true,
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "container_path": {
              "Type": "String",
              "Optional": true
            },
            "from_container": {
              "Type": "String",
              "Optional": true
            },
            "host_path": {
              "Type": "String",
              "Optional": true
            },
            "read_only": {
              "Type": "Bool",
              "Optional": true
            },
            "volume_name": {
              "Type": "String",
              "Optional": true
            }
          }
        }
      }
    },
    "docker_image": {
      "keep_locally": {
        "Type": "Bool",
        "Optional": true
      },
      "latest": {
        "Type": "String",
        "Computed": true
      },
      "name": {
        "Type": "String",
        "Required": true
      },
      "pull_trigger": {
        "Type": "String",
        "Optional": true,
        "ConflictsWith": [
          "pull_triggers"
        ],
        "Deprecated": "Use field pull_triggers instead"
      },
      "pull_triggers": {
        "Type": "Set",
        "Optional": true,
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      }
    },
    "docker_network": {
      "check_duplicate": {
        "Type": "Bool",
        "Optional": true
      },
      "driver": {
        "Type": "String",
        "Optional": true,
        "Computed": true
      },
      "internal": {
        "Type": "Bool",
        "Optional": true,
        "Computed": true
      },
      "ipam_config": {
        "Type": "Set",
        "Optional": true,
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "aux_address": {
              "Type": "Map",
              "Optional": true
            },
            "gateway": {
              "Type": "String",
              "Optional": true
            },
            "ip_range": {
              "Type": "String",
              "Optional": true
            },
            "subnet": {
              "Type": "String",
              "Optional": true
            }
          }
        }
      },
      "ipam_driver": {
        "Type": "String",
        "Optional": true
      },
      "name": {
        "Type": "String",
        "Required": true
      },
      "options": {
        "Type": "Map",
        "Optional": true,
        "Computed": true
      },
      "scope": {
        "Type": "String",
        "Computed": true
      }
    },
    "docker_secret": {
      "data": {
        "Type": "String",
        "Required": true,
        "Description": "User-defined name of the secret"
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "User-defined name of the secret"
      }
    },
    "docker_service": {
      "auth": {
        "Type": "Map",
        "Optional": true,
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "password": {
              "Type": "String",
              "Optional": true,
              "Default": {
                "Type": "string"
              }
            },
            "server_address": {
              "Type": "String",
              "Required": true
            },
            "username": {
              "Type": "String",
              "Optional": true,
              "Default": {
                "Type": "string"
              }
            }
          }
        }
      },
      "converge_config": {
        "Type": "List",
        "Optional": true,
        "Description": "A configuration to ensure that a service converges aka reaches the desired that of all task up and running",
        "MaxItems": 1,
        "ConflictsWith": [
          "mode.0.global"
        ],
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "delay": {
              "Type": "String",
              "Optional": true,
              "Description": "The interval to check if the desired state is reached (ms|s). Default: 7s"
            },
            "timeout": {
              "Type": "String",
              "Optional": true,
              "Description": "The timeout of the service to reach the desired state (s|m). Default: 3m"
            }
          }
        }
      },
      "endpoint_spec": {
        "Type": "List",
        "Optional": true,
        "Description": "Properties that can be configured to access and load balance a service",
        "Computed": true,
        "MaxItems": 1,
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "mode": {
              "Type": "String",
              "Optional": true,
              "Description": "The mode of resolution to use for internal load balancing between tasks",
              "Computed": true
            },
            "ports": {
              "Type": "Set",
              "Optional": true,
              "Description": "List of exposed ports that this service is accessible on from the outside. Ports can only be provided if 'vip' resolution mode is used.",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "name": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "A random name for the port"
                  },
                  "protocol": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Rrepresents the protocol of a port: 'tcp', 'udp' or 'sctp'"
                  },
                  "publish_mode": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Represents the mode in which the port is to be published: 'ingress' or 'host'"
                  },
                  "published_port": {
                    "Type": "Int",
                    "Optional": true,
                    "Description": "The port on the swarm hosts."
                  },
                  "target_port": {
                    "Type": "Int",
                    "Required": true,
                    "Description": "The port inside the container"
                  }
                }
              }
            }
          }
        }
      },
      "labels": {
        "Type": "Map",
        "Optional": true,
        "Description": "User-defined key/value metadata",
        "Computed": true,
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "mode": {
        "Type": "List",
        "Optional": true,
        "Description": "Scheduling mode for the service",
        "Computed": true,
        "MaxItems": 1,
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "global": {
              "Type": "Bool",
              "Optional": true,
              "Description": "The global service mode",
              "ConflictsWith": [
                "mode.0.replicated",
                "converge_config"
              ]
            },
            "replicated": {
              "Type": "List",
              "Optional": true,
              "Description": "The replicated service mode",
              "Computed": true,
              "MaxItems": 1,
              "ConflictsWith": [
                "mode.0.global"
              ],
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "replicas": {
                    "Type": "Int",
                    "Optional": true,
                    "Description": "The amount of replicas of the service"
                  }
                }
              }
            }
          }
        }
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "Name of the service"
      },
      "rollback_config": {
        "Type": "List",
        "Optional": true,
        "Description": "Specification for the rollback strategy of the service",
        "MaxItems": 1,
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "delay": {
              "Type": "String",
              "Optional": true,
              "Description": "Delay between task rollbacks (ns|us|ms|s|m|h)"
            },
            "failure_action": {
              "Type": "String",
              "Optional": true,
              "Description": "Action on rollback failure: pause | continue"
            },
            "max_failure_ratio": {
              "Type": "String",
              "Optional": true,
              "Description": "Failure rate to tolerate during a rollback"
            },
            "monitor": {
              "Type": "String",
              "Optional": true,
              "Description": "Duration after each task rollback to monitor for failure (ns|us|ms|s|m|h)"
            },
            "order": {
              "Type": "String",
              "Optional": true,
              "Description": "Rollback order: either 'stop-first' or 'start-first'"
            },
            "parallelism": {
              "Type": "Int",
              "Optional": true,
              "Description": "Maximum number of tasks to be rollbacked in one iteration"
            }
          }
        }
      },
      "task_spec": {
        "Type": "List",
        "Required": true,
        "Description": "User modifiable task configuration",
        "MaxItems": 1,
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "container_spec": {
              "Type": "List",
              "Required": true,
              "Description": "The spec for each container",
              "MaxItems": 1,
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "args": {
                    "Type": "List",
                    "Optional": true,
                    "Description": "Arguments to the command",
                    "Elem": {
                      "Type": "SchemaElements",
                      "ElementsType": "String"
                    }
                  },
                  "command": {
                    "Type": "List",
                    "Optional": true,
                    "Description": "The command to be run in the image",
                    "Elem": {
                      "Type": "SchemaElements",
                      "ElementsType": "String"
                    }
                  },
                  "configs": {
                    "Type": "Set",
                    "Optional": true,
                    "Description": "References to zero or more configs that will be exposed to the service",
                    "Elem": {
                      "Type": "SchemaInfo",
                      "Info": {
                        "config_id": {
                          "Type": "String",
                          "Required": true,
                          "Description": "ID of the specific config that we're referencing"
                        },
                        "config_name": {
                          "Type": "String",
                          "Optional": true,
                          "Description": "Name of the config that this references, but this is just provided for lookup/display purposes. The config in the reference will be identified by its ID"
                        },
                        "file_name": {
                          "Type": "String",
                          "Required": true,
                          "Description": "Represents the final filename in the filesystem"
                        }
                      }
                    }
                  },
                  "dir": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "The working directory for commands to run in"
                  },
                  "dns_config": {
                    "Type": "List",
                    "Optional": true,
                    "Description": "Specification for DNS related configurations in resolver configuration file (resolv.conf)",
                    "Computed": true,
                    "MaxItems": 1,
                    "Elem": {
                      "Type": "SchemaInfo",
                      "Info": {
                        "nameservers": {
                          "Type": "List",
                          "Required": true,
                          "Description": "The IP addresses of the name servers",
                          "Elem": {
                            "Type": "SchemaElements",
                            "ElementsType": "String"
                          }
                        },
                        "options": {
                          "Type": "List",
                          "Optional": true,
                          "Description": "A list of internal resolver variables to be modified (e.g., debug, ndots:3, etc.)",
                          "Elem": {
                            "Type": "SchemaElements",
                            "ElementsType": "String"
                          }
                        },
                        "search": {
                          "Type": "List",
                          "Optional": true,
                          "Description": "A search list for host-name lookup",
                          "Elem": {
                            "Type": "SchemaElements",
                            "ElementsType": "String"
                          }
                        }
                      }
                    }
                  },
                  "env": {
                    "Type": "Map",
                    "Optional": true,
                    "Description": "A list of environment variables in the form VAR=\"value\"",
                    "Elem": {
                      "Type": "SchemaElements",
                      "ElementsType": "String"
                    }
                  },
                  "groups": {
                    "Type": "List",
                    "Optional": true,
                    "Description": "A list of additional groups that the container process will run as",
                    "Elem": {
                      "Type": "SchemaElements",
                      "ElementsType": "String"
                    }
                  },
                  "healthcheck": {
                    "Type": "List",
                    "Optional": true,
                    "Description": "A test to perform to check that the container is healthy",
                    "Computed": true,
                    "MaxItems": 1,
                    "Elem": {
                      "Type": "SchemaInfo",
                      "Info": {
                        "interval": {
                          "Type": "String",
                          "Optional": true,
                          "Description": "Time between running the check (ms|s|m|h)"
                        },
                        "retries": {
                          "Type": "Int",
                          "Optional": true,
                          "Description": "Consecutive failures needed to report unhealthy"
                        },
                        "start_period": {
                          "Type": "String",
                          "Optional": true,
                          "Description": "Start period for the container to initialize before counting retries towards unstable (ms|s|m|h)"
                        },
                        "test": {
                          "Type": "List",
                          "Required": true,
                          "Description": "The test to perform as list",
                          "Elem": {
                            "Type": "SchemaElements",
                            "ElementsType": "String"
                          }
                        },
                        "timeout": {
                          "Type": "String",
                          "Optional": true,
                          "Description": "Maximum time to allow one check to run (ms|s|m|h)"
                        }
                      }
                    }
                  },
                  "hostname": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "The hostname to use for the container, as a valid RFC 1123 hostname"
                  },
                  "hosts": {
                    "Type": "Set",
                    "Optional": true,
                    "Description": "A list of hostname/IP mappings to add to the container's hosts file.",
                    "Elem": {
                      "Type": "SchemaInfo",
                      "Info": {
                        "host": {
                          "Type": "String",
                          "Required": true
                        },
                        "ip": {
                          "Type": "String",
                          "Required": true
                        }
                      }
                    }
                  },
                  "image": {
                    "Type": "String",
                    "Required": true,
                    "Description": "The image name to use for the containers of the service"
                  },
                  "isolation": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Isolation technology of the containers running the service. (Windows only)"
                  },
                  "labels": {
                    "Type": "Map",
                    "Optional": true,
                    "Description": "User-defined key/value metadata",
                    "Elem": {
                      "Type": "SchemaElements",
                      "ElementsType": "String"
                    }
                  },
                  "mounts": {
                    "Type": "Set",
                    "Optional": true,
                    "Description": "Specification for mounts to be added to containers created as part of the service",
                    "Elem": {
                      "Type": "SchemaInfo",
                      "Info": {
                        "bind_options": {
                          "Type": "List",
                          "Optional": true,
                          "Description": "Optional configuration for the bind type",
                          "MaxItems": 1,
                          "Elem": {
                            "Type": "SchemaInfo",
                            "Info": {
                              "propagation": {
                                "Type": "String",
                                "Optional": true,
                                "Description": "A propagation mode with the value"
                              }
                            }
                          }
                        },
                        "read_only": {
                          "Type": "Bool",
                          "Optional": true,
                          "Description": "Whether the mount should be read-only"
                        },
                        "source": {
                          "Type": "String",
                          "Required": true,
                          "Description": "Mount source (e.g. a volume name, a host path)"
                        },
                        "target": {
                          "Type": "String",
                          "Required": true,
                          "Description": "Container path"
                        },
                        "tmpfs_options": {
                          "Type": "List",
                          "Optional": true,
                          "Description": "Optional configuration for the tmpfs type",
                          "MaxItems": 1,
                          "Elem": {
                            "Type": "SchemaInfo",
                            "Info": {
                              "mode": {
                                "Type": "Int",
                                "Optional": true,
                                "Description": "The permission mode for the tmpfs mount in an integer"
                              },
                              "size_bytes": {
                                "Type": "Int",
                                "Optional": true,
                                "Description": "The size for the tmpfs mount in bytes"
                              }
                            }
                          }
                        },
                        "type": {
                          "Type": "String",
                          "Required": true,
                          "Description": "The mount type"
                        },
                        "volume_options": {
                          "Type": "List",
                          "Optional": true,
                          "Description": "Optional configuration for the volume type",
                          "MaxItems": 1,
                          "Elem": {
                            "Type": "SchemaInfo",
                            "Info": {
                              "driver_name": {
                                "Type": "String",
                                "Optional": true,
                                "Description": "Name of the driver to use to create the volume."
                              },
                              "driver_options": {
                                "Type": "Map",
                                "Optional": true,
                                "Description": "key/value map of driver specific options",
                                "Elem": {
                                  "Type": "SchemaElements",
                                  "ElementsType": "String"
                                }
                              },
                              "labels": {
                                "Type": "Map",
                                "Optional": true,
                                "Description": "User-defined key/value metadata",
                                "Elem": {
                                  "Type": "SchemaElements",
                                  "ElementsType": "String"
                                }
                              },
                              "no_copy": {
                                "Type": "Bool",
                                "Optional": true,
                                "Description": "Populate volume with data from the target"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "privileges": {
                    "Type": "List",
                    "Optional": true,
                    "Description": "Security options for the container",
                    "MaxItems": 1,
                    "Elem": {
                      "Type": "SchemaInfo",
                      "Info": {
                        "credential_spec": {
                          "Type": "List",
                          "Optional": true,
                          "Description": "CredentialSpec for managed service account (Windows only)",
                          "MaxItems": 1,
                          "Elem": {
                            "Type": "SchemaInfo",
                            "Info": {
                              "file": {
                                "Type": "String",
                                "Optional": true,
                                "Description": "Load credential spec from this file"
                              },
                              "registry": {
                                "Type": "String",
                                "Optional": true,
                                "Description": "Load credential spec from this value in the Windows registry"
                              }
                            }
                          }
                        },
                        "se_linux_context": {
                          "Type": "List",
                          "Optional": true,
                          "Description": "SELinux labels of the container",
                          "MaxItems": 1,
                          "Elem": {
                            "Type": "SchemaInfo",
                            "Info": {
                              "disable": {
                                "Type": "Bool",
                                "Optional": true,
                                "Description": "Disable SELinux"
                              },
                              "level": {
                                "Type": "String",
                                "Optional": true,
                                "Description": "SELinux level label"
                              },
                              "role": {
                                "Type": "String",
                                "Optional": true,
                                "Description": "SELinux role label"
                              },
                              "type": {
                                "Type": "String",
                                "Optional": true,
                                "Description": "SELinux type label"
                              },
                              "user": {
                                "Type": "String",
                                "Optional": true,
                                "Description": "SELinux user label"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "read_only": {
                    "Type": "Bool",
                    "Optional": true,
                    "Description": "Mount the container's root filesystem as read only"
                  },
                  "secrets": {
                    "Type": "Set",
                    "Optional": true,
                    "Description": "References to zero or more secrets that will be exposed to the service",
                    "Elem": {
                      "Type": "SchemaInfo",
                      "Info": {
                        "file_name": {
                          "Type": "String",
                          "Required": true,
                          "Description": "Represents the final filename in the filesystem"
                        },
                        "secret_id": {
                          "Type": "String",
                          "Required": true,
                          "Description": "ID of the specific secret that we're referencing"
                        },
                        "secret_name": {
                          "Type": "String",
                          "Optional": true,
                          "Description": "Name of the secret that this references, but this is just provided for lookup/display purposes. The config in the reference will be identified by its ID"
                        }
                      }
                    }
                  },
                  "stop_grace_period": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Amount of time to wait for the container to terminate before forcefully removing it (ms|s|m|h)",
                    "Computed": true
                  },
                  "stop_signal": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Signal to stop the container"
                  },
                  "user": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "The user inside the container"
                  }
                }
              }
            },
            "force_update": {
              "Type": "Int",
              "Optional": true,
              "Description": "A counter that triggers an update even if no relevant parameters have been changed. See https://github.com/docker/swarmkit/blob/master/api/specs.proto#L126",
              "Computed": true
            },
            "log_driver": {
              "Type": "List",
              "Optional": true,
              "Description": "Specifies the log driver to use for tasks created from this spec. If not present, the default one for the swarm will be used, finally falling back to the engine default if not specified",
              "MaxItems": 1,
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "name": {
                    "Type": "String",
                    "Required": true,
                    "Description": "The logging driver to use: one of none|json-file|syslog|journald|gelf|fluentd|awslogs|splunk|etwlogs|gcplogs"
                  },
                  "options": {
                    "Type": "Map",
                    "Optional": true,
                    "Description": "The options for the logging driver",
                    "Elem": {
                      "Type": "SchemaElements",
                      "ElementsType": "String"
                    }
                  }
                }
              }
            },
            "networks": {
              "Type": "Set",
              "Optional": true,
              "Description": "Ids of the networks in which the  container will be put in.",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "placement": {
              "Type": "List",
              "Optional": true,
              "Description": "The placement preferences",
              "Computed": true,
              "MaxItems": 1,
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "constraints": {
                    "Type": "Set",
                    "Optional": true,
                    "Description": "An array of constraints. e.g.: node.role==manager",
                    "Elem": {
                      "Type": "SchemaElements",
                      "ElementsType": "String"
                    }
                  },
                  "platforms": {
                    "Type": "Set",
                    "Optional": true,
                    "Description": "Platforms stores all the platforms that the service's image can run on",
                    "Elem": {
                      "Type": "SchemaInfo",
                      "Info": {
                        "architecture": {
                          "Type": "String",
                          "Required": true,
                          "Description": "The architecture, e.g. amd64"
                        },
                        "os": {
                          "Type": "String",
                          "Required": true,
                          "Description": "The operation system, e.g. linux"
                        }
                      }
                    }
                  },
                  "prefs": {
                    "Type": "Set",
                    "Optional": true,
                    "Description": "Preferences provide a way to make the scheduler aware of factors such as topology. They are provided in order from highest to lowest precedence, e.g.: spread=node.role.manager",
                    "Elem": {
                      "Type": "SchemaElements",
                      "ElementsType": "String"
                    }
                  }
                }
              }
            },
            "resources": {
              "Type": "List",
              "Optional": true,
              "Description": "Resource requirements which apply to each individual container created as part of the service",
              "Computed": true,
              "MaxItems": 1,
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "limits": {
                    "Type": "List",
                    "Optional": true,
                    "Description": "Describes the resources which can be advertised by a node and requested by a task",
                    "MaxItems": 1,
                    "Elem": {
                      "Type": "SchemaInfo",
                      "Info": {
                        "generic_resources": {
                          "Type": "List",
                          "Optional": true,
                          "Description": "User-defined resources can be either Integer resources (e.g, SSD=3) or String resources (e.g, GPU=UUID1)",
                          "MaxItems": 1,
                          "Elem": {
                            "Type": "SchemaInfo",
                            "Info": {
                              "discrete_resources_spec": {
                                "Type": "Set",
                                "Optional": true,
                                "Description": "The Integer resources",
                                "Elem": {
                                  "Type": "SchemaElements",
                                  "ElementsType": "String"
                                }
                              },
                              "named_resources_spec": {
                                "Type": "Set",
                                "Optional": true,
                                "Description": "The String resources",
                                "Elem": {
                                  "Type": "SchemaElements",
                                  "ElementsType": "String"
                                }
                              }
                            }
                          }
                        },
                        "memory_bytes": {
                          "Type": "Int",
                          "Optional": true,
                          "Description": "The amounf of memory in bytes the container allocates"
                        },
                        "nano_cpus": {
                          "Type": "Int",
                          "Optional": true,
                          "Description": "CPU shares in units of 1/1e9 (or 10^-9) of the CPU. Should be at least 1000000"
                        }
                      }
                    }
                  },
                  "reservation": {
                    "Type": "List",
                    "Optional": true,
                    "Description": "An object describing the resources which can be advertised by a node and requested by a task",
                    "MaxItems": 1,
                    "Elem": {
                      "Type": "SchemaInfo",
                      "Info": {
                        "generic_resources": {
                          "Type": "List",
                          "Optional": true,
                          "Description": "User-defined resources can be either Integer resources (e.g, SSD=3) or String resources (e.g, GPU=UUID1)",
                          "MaxItems": 1,
                          "Elem": {
                            "Type": "SchemaInfo",
                            "Info": {
                              "discrete_resources_spec": {
                                "Type": "Set",
                                "Optional": true,
                                "Description": "The Integer resources",
                                "Elem": {
                                  "Type": "SchemaElements",
                                  "ElementsType": "String"
                                }
                              },
                              "named_resources_spec": {
                                "Type": "Set",
                                "Optional": true,
                                "Description": "The String resources",
                                "Elem": {
                                  "Type": "SchemaElements",
                                  "ElementsType": "String"
                                }
                              }
                            }
                          }
                        },
                        "memory_bytes": {
                          "Type": "Int",
                          "Optional": true,
                          "Description": "The amounf of memory in bytes the container allocates"
                        },
                        "nano_cpus": {
                          "Type": "Int",
                          "Optional": true,
                          "Description": "CPU shares in units of 1/1e9 (or 10^-9) of the CPU. Should be at least 1000000"
                        }
                      }
                    }
                  }
                }
              }
            },
            "restart_policy": {
              "Type": "Map",
              "Optional": true,
              "Description": "Specification for the restart policy which applies to containers created as part of this service.",
              "Computed": true,
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "condition": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Condition for restart"
                  },
                  "delay": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Delay between restart attempts (ms|s|m|h)"
                  },
                  "max_attempts": {
                    "Type": "Int",
                    "Optional": true,
                    "Description": "Maximum attempts to restart a given container before giving up (default value is 0, which is ignored)"
                  },
                  "window": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "The time window used to evaluate the restart policy (default value is 0, which is unbounded) (ms|s|m|h)"
                  }
                }
              }
            },
            "runtime": {
              "Type": "String",
              "Optional": true,
              "Description": "Runtime is the type of runtime specified for the task executor. See https://github.com/moby/moby/blob/master/api/types/swarm/runtime.go",
              "Computed": true
            }
          }
        }
      },
      "update_config": {
        "Type": "List",
        "Optional": true,
        "Description": "Specification for the update strategy of the service",
        "MaxItems": 1,
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "delay": {
              "Type": "String",
              "Optional": true,
              "Description": "Delay between task updates (ns|us|ms|s|m|h)"
            },
            "failure_action": {
              "Type": "String",
              "Optional": true,
              "Description": "Action on update failure: pause | continue | rollback"
            },
            "max_failure_ratio": {
              "Type": "String",
              "Optional": true,
              "Description": "Failure rate to tolerate during an update"
            },
            "monitor": {
              "Type": "String",
              "Optional": true,
              "Description": "Duration after each task update to monitor for failure (ns|us|ms|s|m|h)"
            },
            "order": {
              "Type": "String",
              "Optional": true,
              "Description": "Update order: either 'stop-first' or 'start-first'"
            },
            "parallelism": {
              "Type": "Int",
              "Optional": true,
              "Description": "Maximum number of tasks to be updated in one iteration"
            }
          }
        }
      }
    },
    "docker_volume": {
      "driver": {
        "Type": "String",
        "Optional": true,
        "Computed": true
      },
      "driver_opts": {
        "Type": "Map",
        "Optional": true
      },
      "mountpoint": {
        "Type": "String",
        "Computed": true
      },
      "name": {
        "Type": "String",
        "Optional": true,
        "Computed": true
      }
    }
  },
  "data-sources": {
    "docker_registry_image": {
      "name": {
        "Type": "String",
        "Optional": true
      },
      "sha256_digest": {
        "Type": "String",
        "Computed": true
      }
    }
  }
}