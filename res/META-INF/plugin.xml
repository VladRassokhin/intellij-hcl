<idea-plugin version="2">
  <id>org.intellij.plugins.hcl</id>
  <name>HashiCorp Terraform / HCL language support</name>
  <version>0.6.14.dev</version>
  <vendor email="vlad.rassokhin+intellij+hcl@gmail.com" url="https://github.com/VladRassokhin">Vladislav Rassokhin</vendor>

  <description><![CDATA[
    This plugin adds support for <a href="https://github.com/hashicorp/hcl">HashiCorp Configuration Language (HCL)</a>
    and <a href="https://github.com/hashicorp/hil">HashiCorp Interpolation Language (HIL)</a>, as well as their
    combination used in <a href="https://www.terraform.io/">Terraform</a> configuration files (.tf).<br>
    <br> The HCL format is also used for <a href="https://www.nomadproject.io/">Nomad</a> (.nomad files).<br>
    <h3>Features:</h3>
    <h4>For file formats using HCL (.hcl, .tf, .nomad):</h4>
    <ul>
      <li>Syntax highlighting</li>
      <li>Structure outline in the 'Structure' tool window</li>
      <li>Code formatter with the 'Reformat code' action available</li>
      <li>Code folding</li>
      <li>The 'Comment/Uncomment' action</li>
    </ul>
    <h4>For HIL files:</h4>
    <ul>
      <li>Syntax highlighting</li>
    </ul>
    <h3><a href="https://www.terraform.io/">Terraform</a> specific support:</h3>
    <h4>In both configuration files and interpolations:</h4>
    <ul>
      <li>Autocompletion</li>
      <li>Find Usages / Go to definition for resources, providers, variables and their properties</li>
      <li>Rename Refactoring</li>
      <li>Introduce Variable Refactoring (for string property values)</li>
      <li>Several inspections</li>
      <li>Report usage of deprecated properties</li>
      <li>Unresolved reference checks (in interpolations)</li>
      <li>Check required/missing properties in resource/provider</li>
      <li><a href="https://www.terraform.io/docs/configuration/interpolation.html">Predefined Terraform methods</a> autocompletion in interpolations</li>
      <li>(WIP) Better properties validation (type checking)</li>
      <li>(WIP) Working with dependent modules</li>
      <li>(WIP) Type-specific autocompletion in interpolations</li>
    </ul>
    ]]></description>

  <change-notes><![CDATA[
    <h4>0.6.14</h4>
    <p>Requires at least IntelliJ Platform 2018.1</p>
    <p>Fix "Module is missing" inspection in case of registry modules (<a href="https://github.com/VladRassokhin/intellij-hcl/issues/170">#170</a>)</p>
    <p><a href="https://github.com/VladRassokhin/terraform-metadata/blob/master/README.md#terraform-external-metadata">Support loading metadata from special external location</a></p>
    <p>Don't warn about about missing required properties in override files (<a href="https://github.com/VladRassokhin/intellij-hcl/issues/180">#180</a>, <a href="https://github.com/VladRassokhin/intellij-hcl/issues/69">#69</a>) by matthew16550</p>
    <p>"Module is missing" inspection is now visible in the inspections configuration UI (<a href="https://github.com/VladRassokhin/intellij-hcl/issues/171">#171</a>) by matthew16550</p>
    <p>Updated model data to match Terraform v0.11.13</p>
    <p>Various fixes (<a href="https://github.com/VladRassokhin/intellij-hcl/issues/199">#199</a>)</p>
    <h4>Change notes for previous releases <a href="https://github.com/VladRassokhin/intellij-hcl/blob/master/ChangeLog.md">located in sources repository</a></h4>
    ]]>
  </change-notes>

  <!-- please see https://confluence.jetbrains.com/display/IDEADEV/Build+Number+Ranges for description -->
  <idea-version since-build="181.000"/>

  <!-- please see https://confluence.jetbrains.com/display/IDEADEV/Plugin+Compatibility+with+IntelliJ+Platform+Products
       on how to target different products -->
  <depends>com.intellij.modules.platform</depends>
  <depends>com.intellij.modules.lang</depends>
  <depends optional="true" config-file="terraform-watchers.xml">com.intellij.plugins.watcher</depends>

  <extensions defaultExtensionNs="com.intellij">
    <fileTypeFactory implementation="org.intellij.plugins.hcl.HCLFileTypeFactory"/>
    <lang.parserDefinition language="HCL" implementationClass="org.intellij.plugins.hcl.HCLParserDefinition"/>

    <lang.syntaxHighlighterFactory key="HCL" implementationClass="org.intellij.plugins.hcl.HCLSyntaxHighlighterFactory"/>
    <colorSettingsPage implementation="org.intellij.plugins.hcl.HCLColorsPage"/>

    <!-- CodeInsight -->
    <completion.contributor language="HCL" implementationClass="org.intellij.plugins.hcl.terraform.config.codeinsight.TerraformConfigCompletionContributor"/>
    <lang.foldingBuilder language="HCL" implementationClass="org.intellij.plugins.hcl.editor.HCLFoldingBuilder"/>
    <multiLangCommenter implementation="org.intellij.plugins.hcl.editor.HCLCommenter"/>
    <lang.commenter language="HCL" implementationClass="org.intellij.plugins.hcl.editor.HCLCommenter"/>
    <lang.psiStructureViewFactory language="HCL" implementationClass="org.intellij.plugins.hcl.structureView.HCLStructureViewFactory"/>
    <lang.braceMatcher language="HCL" implementationClass="org.intellij.plugins.hcl.codeinsight.HCLBraceMatcher"/>
    <lang.findUsagesProvider language="HCL" implementationClass="org.intellij.plugins.hcl.findUsages.HCLFindUsagesProvider"/>
    <usageTypeProvider implementation="org.intellij.plugins.hcl.terraform.config.findUsages.HCLUsageTypeProvider"/>
    <breadcrumbsInfoProvider implementation="org.intellij.plugins.hcl.editor.HCLBreadcrumbsInfoProvider"/>
    <qualifiedNameProvider implementation="org.intellij.plugins.hcl.navigation.HCLQualifiedNameProvider"/>

    <!-- Annotators -->
    <annotator language="HCL" implementationClass="org.intellij.plugins.hcl.codeinsight.HCLLiteralAnnotator"/>

    <!-- Manipulator for injections support -->
    <lang.elementManipulator forClass="org.intellij.plugins.hcl.psi.HCLIdentifier"
                             implementationClass="org.intellij.plugins.hcl.psi.HCLIdentifierManipulator"/>
    <lang.elementManipulator forClass="org.intellij.plugins.hcl.psi.HCLStringLiteral"
                             implementationClass="org.intellij.plugins.hcl.psi.HCLStringLiteralManipulator"/>
    <lang.elementManipulator forClass="org.intellij.plugins.hcl.psi.HCLHeredocContent"
                             implementationClass="org.intellij.plugins.hcl.psi.HCLHeredocContentManipulator"/>

    <!-- Refactoring support -->
    <lang.refactoringSupport language="HCL" implementationClass="org.intellij.plugins.hcl.psi.HCLRefactoringSupportProvider"/>
    <lang.refactoringSupport language="HCL-Terraform" implementationClass="org.intellij.plugins.hcl.psi.HCLRefactoringSupportProvider"/>
    <renameInputValidator implementation="org.intellij.plugins.hcl.refactoring.HCLElementRenameValidator"/>

    <!-- Formatter -->
    <codeStyleSettingsProvider implementation="org.intellij.plugins.hcl.formatter.HCLCodeStyleSettingsProvider"/>
    <langCodeStyleSettingsProvider implementation="org.intellij.plugins.hcl.formatter.HCLLanguageCodeStyleSettingsProvider"/>
    <lang.formatter language="HCL" implementationClass="org.intellij.plugins.hcl.formatter.HCLFormattingBuilderModel"/>
    <lang.quoteHandler language="HCL" implementationClass="org.intellij.plugins.hcl.formatter.HCLQuoteHandler"/>

    <!-- Handles autoinsert '}' after '${' in string literals (Issue https://github.com/VladRassokhin/intellij-hcl/issues/63>)-->
    <typedHandler implementation="org.intellij.plugins.hcl.terraform.config.editor.TerraformInterpolationStartTypedHandler"/>

    <!-- Terraform Interpolation language -->
    <lang.parserDefinition language="HIL" implementationClass="org.intellij.plugins.hil.HILParserDefinition"/>

    <lang.syntaxHighlighterFactory key="HIL" implementationClass="org.intellij.plugins.hil.HILSyntaxHighlighterFactory"/>
    <colorSettingsPage implementation="org.intellij.plugins.hil.HILColorPage"/>

    <!-- Annotators -->
    <annotator language="HIL" implementationClass="org.intellij.plugins.hil.codeinsight.HILVariableAnnotator"/>

    <!-- CodeInsight -->
    <lang.braceMatcher language="HIL" implementationClass="org.intellij.plugins.hil.codeinsight.HILBraceMatcher"/>
    <lang.quoteHandler language="HIL" implementationClass="org.intellij.plugins.hil.formatter.HILQuoteHandler"/>
    <lang.foldingBuilder language="HIL" implementationClass="org.intellij.plugins.hil.formatter.HILFoldingBuilder"/>
    <psi.referenceContributor language="HIL" implementation="org.intellij.plugins.hil.psi.ILReferenceContributor"/>
    <completion.contributor language="HIL" implementationClass="org.intellij.plugins.hil.codeinsight.HILCompletionContributor"/>
    <lang.elementManipulator forClass="org.intellij.plugins.hil.psi.ILVariable"
                             implementationClass="org.intellij.plugins.hil.psi.ILVariableManipulator"/>
    <lang.elementManipulator forClass="org.intellij.plugins.hil.psi.ILLiteralExpression"
                             implementationClass="org.intellij.plugins.hil.psi.ILLiteralExpressionManipulator"/>
    <!-- Refactoring support -->
    <lang.refactoringSupport language="HIL" implementationClass="org.intellij.plugins.hil.refactoring.ILRefactoringSupportProvider"/>
    <renameInputValidator implementation="org.intellij.plugins.hil.refactoring.HILElementRenameValidator"/>

    <lang.findUsagesProvider language="HIL" implementationClass="org.intellij.plugins.hil.findUsages.HILFindUsagesProvider"/>
    <usageTypeProvider implementation="org.intellij.plugins.hil.findUsages.HILUsageTypeProvider"/>

    <!-- Inject TIL into TerraformConfig -->
    <languageInjector implementation="org.intellij.plugins.hil.ILLanguageInjector"/>

    <!-- Terraform Config language -->
    <fileTypeFactory implementation="org.intellij.plugins.hcl.terraform.config.TerraformFileTypeFactory"/>
    <lang.parserDefinition language="HCL-Terraform" implementationClass="org.intellij.plugins.hcl.terraform.config.TerraformParserDefinition"/>
    <lang.syntaxHighlighterFactory key="HCL-Terraform" implementationClass="org.intellij.plugins.hcl.terraform.config.TerraformSyntaxHighlighterFactory"/>

    <!-- CodeInsight -->
    <!--<completion.contributor language="HCL-Terraform" implementationClass="org.intellij.plugins.hcl.terraform.config.codeinsight.TerraformConfigCompletionProvider"/>-->
    <lang.foldingBuilder language="HCL-Terraform" implementationClass="org.intellij.plugins.hcl.editor.HCLFoldingBuilder"/>
    <lang.commenter language="HCL-Terraform" implementationClass="org.intellij.plugins.hcl.editor.HCLCommenter"/>
    <!-- TODO: Better structure view provider-->
    <lang.psiStructureViewFactory language="HCL-Terraform" implementationClass="org.intellij.plugins.hcl.structureView.HCLStructureViewFactory"/>
    <lang.braceMatcher language="HCL-Terraform" implementationClass="org.intellij.plugins.hcl.codeinsight.HCLBraceMatcher"/>
    <lang.findUsagesProvider language="HCL-Terraform" implementationClass="org.intellij.plugins.hcl.terraform.config.findUsages.TerraformFindUsagesProvider"/>
    <useScopeEnlarger implementation="org.intellij.plugins.hcl.terraform.config.OutputsAndVariablesBlocksUseScopeEnlarger"/>

    <psi.referenceContributor language="HCL" implementation="org.intellij.plugins.hcl.terraform.config.psi.TerraformReferenceContributor"/>
    <lang.documentationProvider language="HCL" implementationClass="org.intellij.plugins.hcl.terraform.config.TerraformDocumentationProvider"/>

    <statementUpDownMover implementation="org.intellij.plugins.hcl.terraform.HCLStatementMover" id="HCL_SM" order="before line"/>

    <!-- Formatter -->
    <codeStyleSettingsProvider implementation="org.intellij.plugins.hcl.terraform.config.formatter.TerraformCodeStyleSettingsProvider"/>
    <langCodeStyleSettingsProvider implementation="org.intellij.plugins.hcl.terraform.config.formatter.TerraformConfigCodeStyleSettingsProvider"/>
    <lang.formatter language="HCL-Terraform" implementationClass="org.intellij.plugins.hcl.terraform.config.formatter.TerraformFormattingBuilderModel"/>
    <lang.quoteHandler language="HCL-Terraform" implementationClass="org.intellij.plugins.hcl.formatter.HCLQuoteHandler"/>
    <!-- TODO: Better breadcrumbs provider-->

    <applicationService serviceInterface="org.intellij.plugins.hcl.terraform.config.model.TypeModelProvider" serviceImplementation="org.intellij.plugins.hcl.terraform.config.model.TypeModelProvider"/>

    <!-- Code Inspections -->
    <!-- HCL used instead HCL-Terraform, to apply to all psi elements. .hcl files filtered out in #buildVisito method -->
    <lang.inspectionSuppressor language="HCL" implementationClass="org.intellij.plugins.hcl.terraform.config.inspection.HCLInspectionSuppressor"/>
    <localInspection language="HCL" applyToDialects="true" shortName="HCLBlockMissingProperty" bundle="messages.HCLBundle"
                     key="missing.resource.property.inspection.display.name"
                     groupKey="terraform.files.inspection.group.display.name" enabledByDefault="true" level="WARNING"
                     implementationClass="org.intellij.plugins.hcl.terraform.config.inspection.HCLBlockMissingPropertyInspection"/>
    <localInspection language="HCL" applyToDialects="true" shortName="HCLBlockConflictingProperties" bundle="messages.HCLBundle"
                     key="conflicting.resource.property.inspection.display.name"
                     groupKey="terraform.files.inspection.group.display.name" enabledByDefault="true" level="ERROR"
                     implementationClass="org.intellij.plugins.hcl.terraform.config.inspection.HCLBlockConflictingPropertiesInspection"/>
    <localInspection language="HCL" applyToDialects="true" shortName="HCLUnknownBlockType" bundle="messages.HCLBundle"
                     key="unknown.block.type.inspection.display.name"
                     groupKey="terraform.files.inspection.group.display.name" enabledByDefault="true" level="WARNING"
                     implementationClass="org.intellij.plugins.hcl.terraform.config.inspection.HCLUnknownBlockTypeInspection"/>
    <localInspection language="HCL" applyToDialects="true" shortName="HCLDeprecatedElement" bundle="messages.HCLBundle"
                     key="deprecated.element.inspection.display.name"
                     groupKey="terraform.files.inspection.group.display.name" enabledByDefault="true" level="WEAK WARNING"
                     implementationClass="org.intellij.plugins.hcl.terraform.config.inspection.HCLDeprecatedElementInspection"/>
    <localInspection language="HCL" applyToDialects="true" shortName="TFVARSIncorrectElement" bundle="messages.HCLBundle"
                     key="tfvars.unsupported.element.inspection.display.name"
                     groupKey="terraform.files.inspection.group.display.name" enabledByDefault="true" level="WARNING"
                     implementationClass="org.intellij.plugins.hcl.terraform.config.inspection.TFVARSIncorrectElementInspection"/>
    <localInspection language="HCL" applyToDialects="true" shortName="TFIncorrectVariableType" bundle="messages.HCLBundle"
                     key="incorrect.variable.type.inspection.display.name"
                     groupKey="terraform.files.inspection.group.display.name" enabledByDefault="true" level="ERROR"
                     implementationClass="org.intellij.plugins.hcl.terraform.config.inspection.TFIncorrectVariableTypeInspection"/>
    <localInspection language="HCL" applyToDialects="true" shortName="TFMissingModule" bundle="messages.HCLBundle"
                     key="missing.module.inspection.display.name"
                     groupKey="terraform.files.inspection.group.display.name" enabledByDefault="true" level="WARNING"
                     implementationClass="org.intellij.plugins.hcl.terraform.config.inspection.TFMissingModuleInspection"/>

    <!--region TF Duplicates-->
    <localInspection language="HCL" applyToDialects="true" shortName="TFDuplicatedProvider" bundle="messages.HCLBundle"
                     key="duplicated.provider.inspection.display.name"
                     groupPath="Terraform Configs"
                     groupKey="terraform.files.duplicates.inspection.group.display.name" enabledByDefault="true" level="ERROR"
                     implementationClass="org.intellij.plugins.hcl.terraform.config.inspection.TFDuplicatedProviderInspection"/>
    <localInspection language="HCL" applyToDialects="true" shortName="TFDuplicatedVariable" bundle="messages.HCLBundle"
                     key="duplicated.variable.inspection.display.name"
                     groupPath="Terraform Configs"
                     groupKey="terraform.files.duplicates.inspection.group.display.name" enabledByDefault="true" level="ERROR"
                     implementationClass="org.intellij.plugins.hcl.terraform.config.inspection.TFDuplicatedVariableInspection"/>
    <localInspection language="HCL" applyToDialects="true" shortName="TFDuplicatedOutput" bundle="messages.HCLBundle"
                     key="duplicated.output.inspection.display.name"
                     groupPath="Terraform Configs"
                     groupKey="terraform.files.duplicates.inspection.group.display.name" enabledByDefault="true" level="ERROR"
                     implementationClass="org.intellij.plugins.hcl.terraform.config.inspection.TFDuplicatedOutputInspection"/>
    <localInspection language="HCL" applyToDialects="true" shortName="TFDuplicatedBlockProperty" bundle="messages.HCLBundle"
                     key="duplicated.block.property.inspection.display.name"
                     groupPath="Terraform Configs"
                     groupKey="terraform.files.duplicates.inspection.group.display.name" enabledByDefault="true" level="ERROR"
                     implementationClass="org.intellij.plugins.hcl.terraform.config.inspection.TFDuplicatedBlockPropertyInspection"/>
    <!--endregion Duplicates-->

    <localInspection language="HCL" applyToDialects="true" shortName="TFNoInterpolationsAllowed" bundle="messages.HCLBundle"
                     key="interpolations.not.allowed.display.name"
                     groupKey="terraform.files.inspection.group.display.name" enabledByDefault="true" level="ERROR"
                     implementationClass="org.intellij.plugins.hcl.terraform.config.inspection.TFNoInterpolationsAllowedInspection"/>

    <!-- HIL Inspections -->
    <localInspection language="HIL" applyToDialects="true" shortName="HILMissingSelfInContext" bundle="messages.HCLBundle"
                     key="hil.scope.not.available.in.context.inspection.display.name"
                     groupKey="terraform.files.inspection.group.display.name" enabledByDefault="true" level="ERROR"
                     implementationClass="org.intellij.plugins.hil.inspection.HILMissingSelfInContextInspection"/>
    <localInspection language="HIL" applyToDialects="true" shortName="HILUnknownResourceType" bundle="messages.HCLBundle"
                     key="hil.unknown.resource.type.inspection.display.name"
                     groupKey="terraform.files.inspection.group.display.name" enabledByDefault="true" level="WARNING"
                     implementationClass="org.intellij.plugins.hil.inspection.HILUnknownResourceTypeReferencedInspection"/>
    <localInspection language="HIL" applyToDialects="true" shortName="HILUnresolvedReference" bundle="messages.HCLBundle"
                     key="hil.unresolved.reference.inspection.display.name"
                     groupKey="terraform.files.inspection.group.display.name" enabledByDefault="true" level="ERROR"
                     implementationClass="org.intellij.plugins.hil.inspection.HILUnresolvedReferenceInspection"/>
    <localInspection language="HIL" applyToDialects="true" shortName="HILOperationTypesMismatch" bundle="messages.HCLBundle"
                     key="hil.operation-argument-type-mismatch.inspection.display.name"
                     groupKey="terraform.files.inspection.group.display.name" enabledByDefault="true" level="ERROR"
                     implementationClass="org.intellij.plugins.hil.inspection.HILOperationTypesMismatchInspection"/>

    <!-- Terraform as Tool -->
    <projectService serviceImplementation="org.intellij.plugins.hcl.terraform.TerraformToolProjectSettings"/>
    <projectConfigurable groupId="tools" instance="org.intellij.plugins.hcl.terraform.TerraformToolConfigurable"
                         id="reference.settingsdialog.project.terraform"
                         key="terraform.name" bundle="messages.HCLBundle"/>

    <configurationType implementation="org.intellij.plugins.hcl.terraform.run.TerraformConfigurationType"/>
    <runConfigurationProducer implementation="org.intellij.plugins.hcl.terraform.run.TerraformResourceConfigurationProducer$Companion$Plan"/>
    <runConfigurationProducer implementation="org.intellij.plugins.hcl.terraform.run.TerraformResourceConfigurationProducer$Companion$Apply"/>
    <runConfigurationProducer implementation="org.intellij.plugins.hcl.terraform.run.TerraformFileConfigurationProducer$Companion$Plan"/>
    <runConfigurationProducer implementation="org.intellij.plugins.hcl.terraform.run.TerraformFileConfigurationProducer$Companion$Apply"/>
    <runLineMarkerContributor language="HCL" implementationClass="org.intellij.plugins.hcl.terraform.run.TerraformRunLineMarkerContributor"/>

    <checkinHandlerFactory implementation="org.intellij.plugins.hcl.terraform.actions.TFFmtCheckinFactory" order="last"/>
  </extensions>

  <application-components>
    <component>
      <implementation-class>org.intellij.plugins.hcl.UpdateComponent</implementation-class>
    </component>
    <component>
      <implementation-class>org.intellij.plugins.hcl.terraform.config.watchers.macros.MacrosInstaller</implementation-class>
    </component>
  </application-components>

  <project-components>
    <!-- Add your project components here -->
  </project-components>

  <actions>

    <!-- Generate actions -->
    <group id="TF.GenerateGroup">
      <action id="GenerateTFResource" text="Resource..." class="org.intellij.plugins.hcl.terraform.config.generate.GenerateResource"/>
      <action id="GenerateTFDataSource" text="Data Source..." class="org.intellij.plugins.hcl.terraform.config.generate.GenerateDataSource"/>
      <action id="GenerateTFVariable" text="Variable..." class="org.intellij.plugins.hcl.terraform.config.generate.GenerateVariable"/>
      <action id="GenerateTFOutput" text="Output..." class="org.intellij.plugins.hcl.terraform.config.generate.GenerateOutput"/>
      <action id="GenerateTFProvider" text="Provider..." class="org.intellij.plugins.hcl.terraform.config.generate.GenerateProvider"/>
      <action id="GenerateTFModule" text="Module..." class="org.intellij.plugins.hcl.terraform.config.generate.GenerateModule"/>
      <!--<action id="GenerateTF" text="..." class=""/>-->
      <add-to-group group-id="GenerateGroup" anchor="first"/>
    </group>

    <group id="TFTools" text="Terraform Tools" description="Terraform External Tools" popup="true">
      <action id="TFFmtFileAction" class="org.intellij.plugins.hcl.terraform.actions.TFFmtFileAction" text="Terraform fmt file"
              description="Format selected file with terraform fmt util">
        <keyboard-shortcut keymap="$default" first-keystroke="shift ctrl alt F"/>
      </action>
      <add-to-group group-id="CodeMenu" anchor="last"/>
      <add-to-group group-id="ProjectViewPopupMenu" anchor="last"/>
      <add-to-group group-id="EditorLangPopupMenu" anchor="last"/>
    </group>
  </actions>

</idea-plugin>
